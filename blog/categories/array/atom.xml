<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: array | Learnings]]></title>
  <link href="http://learnwrite.github.io/blog/categories/array/atom.xml" rel="self"/>
  <link href="http://learnwrite.github.io/"/>
  <updated>2014-02-01T00:19:06-08:00</updated>
  <id>http://learnwrite.github.io/</id>
  <author>
    <name><![CDATA[Vaibhav Gautam]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Array and Strings]]></title>
    <link href="http://learnwrite.github.io/blog/2013/12/30/array-and-strings/"/>
    <updated>2013-12-30T01:26:00-08:00</updated>
    <id>http://learnwrite.github.io/blog/2013/12/30/array-and-strings</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#array-problems">Array Problems</a>    <ul>
      <li><a href="#find-repeatingduplicate-numbers">Find repeating/duplicate numbers</a></li>
      <li><a href="#sum-of-2-numbers">Sum of 2 numbers</a></li>
      <li><a href="#sum-of-3-numbers">Sum of 3 numbers</a></li>
      <li><a href="#reverse-a-string-without-extra-space">Reverse a string without extra space</a></li>
      <li><a href="#duplicates-and-count">Duplicates and Count</a></li>
      <li><a href="#remove-duplicate-spaces">Remove duplicate spaces</a></li>
      <li><a href="#remove-spaces">Remove spaces</a></li>
      <li><a href="#remove-all-consequtive-duplicate-elements">Remove all consequtive duplicate elements</a></li>
      <li><a href="#rotate-a-string">Rotate a string</a></li>
      <li><a href="#permutation-of-a-string">Permutation of a string</a></li>
      <li><a href="#find-anagram">Find Anagram</a></li>
    </ul>
  </li>
</ul>

<h3 id="array-problems">Array Problems</h3>

<h4 id="find-repeatingduplicate-numbers">Find repeating/duplicate numbers</h4>
<p>Find all the numbers repeating in a array</p>

<p>Input
2,1, 3, 2, 3, 1, 4</p>

<p>Output
2,1,3</p>

<h4 id="sum-of-2-numbers">Sum of 2 numbers</h4>

<p>We are given a sorted array A of length n and a value k. We want to find out if there are indices i, j such that A[i] + A[j] == k. Give a Θ(n) way of solving this problem. Prove its running time and correctness. For full credit, your algorithm should also output one pair of indices i, j such that A[i] + A[j] == k (if at least one pair exists; if multiple exist, you only need to output one of them). </p>

<p>Other variant of the same problem
When array is not sorted<br />
We need to find pair of numbers in an array whose sum is equal to a given value.<br />
A = {6,4,5,7,9,1,2}<br />
Sum = 10 Then the pairs are  {6,4} , {9,1}</p>

<h4 id="sum-of-3-numbers">Sum of 3 numbers</h4>
<p>We need to find three numbers in an array whose sum is equal to a given value.</p>

<p><br />
<br /></p>

<!-- more -->
<p>### String Problems</p>

<h4 id="reverse-a-string-without-extra-space">Reverse a string without extra space</h4>

<p>String could be reversed without using extra space using bitwise operator <a href="http://learnwrite.github.io/blog/2013/10/08/world-of-bits-and-bytes/#bitwise-operators" target="_blank">XOR</a></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption class='code-header'><span>String Reverse</span>  <a href='http://ideone.com/vfTxcr' target='_blank'>Run Code </a></figcaption> <div class="CodeRay">
  <div class="code"><pre><span class="line-numbers"> <a href="#n1" name="n1">1</a></span>
<span class="line-numbers"> <a href="#n2" name="n2">2</a></span><span class="preprocessor">#include</span> <span class="include">&lt;stdio.h&gt;</span>
<span class="line-numbers"> <a href="#n3" name="n3">3</a></span><span class="preprocessor">#include</span> <span class="include">&lt;string.h /&gt;</span>&lt;/stdio.h&gt;&lt;/p&gt;
<span class="line-numbers"> <a href="#n4" name="n4">4</a></span>
<span class="line-numbers"> <a href="#n5" name="n5">5</a></span>&lt;p&gt;<span class="predefined-type">int</span> main(<span class="directive">void</span>) {
<span class="line-numbers"> <a href="#n6" name="n6">6</a></span>    <span class="predefined-type">int</span> i = <span class="integer">0</span>;
<span class="line-numbers"> <a href="#n7" name="n7">7</a></span>    <span class="predefined-type">char</span> str[] = <span class="error">“</span>testString<span class="error">”</span>;
<span class="line-numbers"> <a href="#n8" name="n8">8</a></span>    <span class="predefined-type">int</span> len = strlen(str);&lt;/p&gt;
<span class="line-numbers"> <a href="#n9" name="n9">9</a></span>
<span class="line-numbers"><strong><a href="#n10" name="n10">10</a></strong></span>&lt;pre&gt;&lt;code&gt;<span class="keyword">for</span>(i = <span class="integer">0</span>; i &amp;lt; len/<span class="integer">2</span>; i++){
<span class="line-numbers"><a href="#n11" name="n11">11</a></span>    str[len - i - <span class="integer">1</span>] ^= str[i];
<span class="line-numbers"><a href="#n12" name="n12">12</a></span>    str[i] ^= str[len - i - <span class="integer">1</span>];
<span class="line-numbers"><a href="#n13" name="n13">13</a></span>    str[len - i - <span class="integer">1</span>] ^= str[i];
<span class="line-numbers"><a href="#n14" name="n14">14</a></span>}
<span class="line-numbers"><a href="#n15" name="n15">15</a></span>
<span class="line-numbers"><a href="#n16" name="n16">16</a></span>printf(<span class="string"><span class="delimiter">&quot;</span><span class="content">Reverse String %s </span><span class="char">\n</span><span class="delimiter">&quot;</span></span>, str);
<span class="line-numbers"><a href="#n17" name="n17">17</a></span> 
<span class="line-numbers"><a href="#n18" name="n18">18</a></span><span class="keyword">return</span> <span class="integer">0</span>; }
<span class="line-numbers"><a href="#n19" name="n19">19</a></span>&lt;/code&gt;&lt;/pre&gt;
<span class="line-numbers"><strong><a href="#n20" name="n20">20</a></strong></span>
<span class="line-numbers"><a href="#n21" name="n21">21</a></span>&lt;p&gt;</pre></div>
</div>
 </figure></notextile></div>
<br /></p>

<h4 id="duplicates-and-count">Duplicates and Count</h4>

<p>Print all duplicate characters and their count</p>

<p>Input string<br />
Foo Bar</p>

<p>Output<br />
a1B1F1o2r1</p>

<h4 id="remove-duplicate-spaces">Remove duplicate spaces</h4>
<p>Remove all duplicate spaces from the string</p>

<p>Input string<br />
Hi^^^There!!!^^Wassup<br />
 ^ - Represents  space</p>

<p>Output<br />
Hi^There!!!^Wassup</p>

<h4 id="remove-spaces">Remove spaces</h4>
<p>Remove all the spaces from a string</p>

<p>Input string<br />
Hi there!!! Wassup</p>

<p>Output<br />
Hithere!!!Wassup</p>

<h4 id="remove-all-consequtive-duplicate-elements">Remove all consequtive duplicate elements</h4>
<p>Remove all consequtive duplicate elements from the string</p>

<p>Input string<br />
aabbccddd</p>

<p>Output <br />
abcd</p>

<h4 id="rotate-a-string">Rotate a string</h4>
<p>Rotate a string for a ‘n’ times</p>

<p>Input string<br />
1234567 <br />
Rotate 2 times</p>

<p>Output <br />
3456712</p>

<h4 id="permutation-of-a-string">Permutation of a string</h4>

<p><a href="http://learnwrite.github.io/blog/2013/11/18/recursion/#string-permutation-non-repeating" target="_blank">Permutation</a></p>

<p><br /></p>

<h4 id="find-anagram">Find Anagram</h4>
]]></content>
  </entry>
  
</feed>
